//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/CalculatorService")]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ISimpleCalculator")]
public interface ISimpleCalculator
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/AddNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/AddNumbersResponse")]
    double AddNumbers(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/AddNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/AddNumbersResponse")]
    System.Threading.Tasks.Task<double> AddNumbersAsync(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/SubtractNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/SubtractNumbersResponse")]
    double SubtractNumbers(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/SubtractNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/SubtractNumbersResponse")]
    System.Threading.Tasks.Task<double> SubtractNumbersAsync(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/MultplyNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/MultplyNumbersResponse")]
    double MultplyNumbers(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/MultplyNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/MultplyNumbersResponse")]
    System.Threading.Tasks.Task<double> MultplyNumbersAsync(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/DivideNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/DivideNumbersResponse")]
    double DivideNumbers(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/DivideNumbers", ReplyAction="http://tempuri.org/ISimpleCalculator/DivideNumbersResponse")]
    System.Threading.Tasks.Task<double> DivideNumbersAsync(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISimpleCalculator/GetDataUsingDataContractResponse")]
    CalculatorService.CompositeType GetDataUsingDataContract(CalculatorService.CompositeType composite);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISimpleCalculator/GetDataUsingDataContractResponse")]
    System.Threading.Tasks.Task<CalculatorService.CompositeType> GetDataUsingDataContractAsync(CalculatorService.CompositeType composite);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ISimpleCalculatorChannel : ISimpleCalculator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SimpleCalculatorClient : System.ServiceModel.ClientBase<ISimpleCalculator>, ISimpleCalculator
{
    
    public SimpleCalculatorClient()
    {
    }
    
    public SimpleCalculatorClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public SimpleCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SimpleCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SimpleCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public double AddNumbers(double number1, double number2)
    {
        return base.Channel.AddNumbers(number1, number2);
    }
    
    public System.Threading.Tasks.Task<double> AddNumbersAsync(double number1, double number2)
    {
        return base.Channel.AddNumbersAsync(number1, number2);
    }
    
    public double SubtractNumbers(double number1, double number2)
    {
        return base.Channel.SubtractNumbers(number1, number2);
    }
    
    public System.Threading.Tasks.Task<double> SubtractNumbersAsync(double number1, double number2)
    {
        return base.Channel.SubtractNumbersAsync(number1, number2);
    }
    
    public double MultplyNumbers(double number1, double number2)
    {
        return base.Channel.MultplyNumbers(number1, number2);
    }
    
    public System.Threading.Tasks.Task<double> MultplyNumbersAsync(double number1, double number2)
    {
        return base.Channel.MultplyNumbersAsync(number1, number2);
    }
    
    public double DivideNumbers(double number1, double number2)
    {
        return base.Channel.DivideNumbers(number1, number2);
    }
    
    public System.Threading.Tasks.Task<double> DivideNumbersAsync(double number1, double number2)
    {
        return base.Channel.DivideNumbersAsync(number1, number2);
    }
    
    public CalculatorService.CompositeType GetDataUsingDataContract(CalculatorService.CompositeType composite)
    {
        return base.Channel.GetDataUsingDataContract(composite);
    }
    
    public System.Threading.Tasks.Task<CalculatorService.CompositeType> GetDataUsingDataContractAsync(CalculatorService.CompositeType composite)
    {
        return base.Channel.GetDataUsingDataContractAsync(composite);
    }
}
